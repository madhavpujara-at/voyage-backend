// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/infrastructure/database/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// USER
enum UserRole {
  TEAM_MEMBER
  TECH_LEAD
  ADMIN
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  role      UserRole @default(TEAM_MEMBER)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relationships
  givenKudos Kudo[] @relation("givenKudos")

  @@map("users")
}

// TEAM
model Team {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relationships
  kudos Kudo[]

  @@map("teams")
}

// CATEGORY
model Category {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relationships
  kudos Kudo[]

  @@map("categories")
}

// KUDO
model Kudo {
  id            String   @id @default(uuid())
  message       String
  recipientName String   @map("recipient_name")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  // Relationships
  giverId String @map("giver_id")
  giver   User   @relation("givenKudos", fields: [giverId], references: [id])

  teamId String @map("team_id")
  team   Team   @relation(fields: [teamId], references: [id])

  categoryId String   @map("category_id")
  category   Category @relation(fields: [categoryId], references: [id])

  @@map("kudos")
}
